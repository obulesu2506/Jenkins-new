pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    // environment section not required since global value usage not required here
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')
    }
    stages{
        stage('init and plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') { // aws-creds credentail file should be create in jenkins
                    sh """
                        cd 00-vpc
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }
        stage('Apply or Destroy') {
            input {
                message " Should we contiute to ${params.ACTION}"
                ok "yes, we should."
            }
            steps {
                withAWS(region:'us-east-1', credentials: 'aws-creds') {
                    sh """
                    cd 00-vpc
                    if [ ${params.ACTION} == 'apply' ]
                    then
                        terraform apply -auto-approve tfplan
                    elif [ ${params.ACTION} == 'destroy' ]
                    then
                        terraform destroy -auto-approve tfplan
                    fi
                    """
                }
            }
        }
        stage('Trigger SG') {
            steps {
                when {
                    expression { params.ACTION == 'apply' }
                }
                steps {
                    build job: '10-sg', parameters: [ string(name: 'ACTION', value: 'apply')], wait: false 
                }
            }
        }
    }
    post {
        always {
            echo 'This section runs always'
            deleteDir()
        }
        success {
            echo 'This section runs when pipeline success'
            deleteDir()
        }
        failure {
            echo 'This section runs when pipeline failed'
            deleteDir()
        }
    }
}